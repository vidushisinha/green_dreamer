
###############################################################################
shinyServer(function(input, output) {
# HOME ########################################################################  
      output$home1 = renderText(
        'A carbon footprint is the amount of greenhouse gases-primarily carbon
        dioxide-released into the atmosphere by a particular human activity. 
        A carbon footprint can be a broad meaasure or be applied to the actions
        of an individual, a family, an event, an organization, or even an entire
        nation. It is usually measured as tons of CO2 emitted per year, a number
        that can be supplemented by tons of CO2-equivalent gases, including 
        methane, nitrous oxide, and other greenhouse gases.'
      )
      output$home2 = renderText(
        '•	Electricity and Heat Production
•	Industry
•	Agriculture, Forestry, and Other Land Use
•	Transportation
•	Buildings
•	Other Energy')
      output$home3 = renderText(
        'Carbon emissions affect the planet significantly, as they are the 
        greenhouse gas with the highest levels of emissions in the atmosphere. 
        This, of course, causes global warming and ultimately, climate change.
        Carbon dioxide is released into the atmosphere when fossil fuels — coal,
        natural gas, and oil — are burned. But burning other biological 
        materials also releases carbon dioxide: solid waste, trees, etc. 
        Anytime that carbon dioxide is emitted into the atmosphere in large 
        quantities — especially if it is staying in the atmosphere for thousands 
        of years — it is affecting the planet.Carbon emissions directly affect 
        humans, too, causing more respiratory disease from an increase of smog 
        and air pollution. Not to mention that if carbon emissions eradicate 
        certain animal species, destroy crop yields and lands, humans will also
        see the repercussions of those effects as well.'
      )
# SOLUTION ########################################################################  
     output$sol1 = renderText(
        'Lower the amount of energy used to pump, treat, and heat water by 
        washing your car less often, using climate-appropriate plants in your 
        garden, installing drip irrigation so that plants receive only what they 
        need, and making water-efficient choices when purchasing shower heads, 
        faucet heads, toilets, dishwashers and washing machines.'
      )
      output$sol2 = renderText(
        'It has been estimated that 29% of U.S. greenhouse gas emissions result
        from the “provision of goods,” which means the extraction of resources,
        manufacturing, transport, and final disposal of “goods” which include 
        consumer products and packaging, building components, and passenger 
        vehicles, but excluding food. By buying used products and reselling or
        recyling items you no longer use, you dramatically reduce your carbon 
        emissions from the provision of goods.'
      )
      output$sol3 = renderText(
        'Whenever you can, advocate for clean alternatives to fossil fuels, such
        as wind, solar, geothermal, and appropriately designed hydroelectric and
        biomass energy projects.'
      )
# WORLD MAP ###################################################################  
     output$wmap_gvis = renderGvis({
        gvisGeoChart(
          data = complete.df %>% 
            filter(Record == as.character(input$type_map)) %>%
            select(Country, Value = matches(paste0('X',as.character(input$year)))) %>%
            mutate(Proportion = (Value/sum(Value))),
          locationvar = 'Country',
          colorvar = 'Value',
          hovervar = 'Country',
          options  = list(region = 'world', 
                         displayMode = 'regions',
                         colorAxis = "{colors:['#00853f', 'black', '#e31b23']}",
                         backgroundColor = '#dceef7',
                         datalessRegionColor = 'grey',
                         width = 'auto', height = 'auto',
                         forceFrame = TRUE)
        )
    })
# GLOBAL AGGREGATE GRAPHS #####################################################
    output$aggregate_graph = renderGvis({
      gvisLineChart(
        data = as.data.frame(complete.df %>%
          filter(Record == input$type_total) %>%
          gather(key = 'Year', value = 'Emission', -c(1:2)) %>%
          mutate(Year = as.numeric(substr(Year, 2, 5))) %>%
          group_by(Year) %>%
          summarise(Total.Emission = sum(Emission))),
        
        xvar = 'Year', yvar   = 'Total.Emission',
        options = list(width  = 'auto', height = '400', 
                       legend = "{position:'none'}",
                       hAxis  = "{format: ['####'], title: ['Year']}",
                       series = "{0: {color: '#26B14C'}}",
                       lineWidth = 4)
      )
    })
# PER COUNTRY GRAPHS ##########################################################
    output$percountry_graph = renderPlot(
      complete.df %>%
        filter(Country == input$country, Record %in% c('CBA_GgCO2', 'PBA_GgCO2')) %>%
        gather(key = 'Year', value = 'Emission', -c(1:2)) %>%
        mutate(Year = as.numeric(substr(Year, 2, 5))) %>%
        mutate(Record = ifelse(Record == 'CBA_GgCO2', 'Consumption', 'Production')) %>%
        
        ggplot(aes(x = Year, y = Emission, color = Record)) +
        geom_line(size = 2) +
        ylab(label = 'Emissions (in GgCO2)') +
        scale_color_discrete(name = 'Emission Type') +
        theme   (axis.text.x        = element_text(size = 12),
                 panel.background   = element_rect(fill='white'),
                 panel.grid.major.y = element_line(color = 'grey'),
                 panel.grid.minor.y = element_line(color = 'grey'),
                 panel.grid.major.x = element_line(color = 'grey90'))
    )
# TOP 20 GRAPHS ###############################################################
    output$t20_graph = renderPlot(
      complete.df %>%
        select  (Country, Record , X2015) %>%
        filter  (Record == as.character(input$type_20)) %>%
        arrange (desc(X2015)) %>%
        top_n   (20) %>%
        ggplot  (aes(x= reorder(Country, desc(X2015)), y= X2015)) +
        geom_col(width = 0.5, fill = 'dark red') +
        labs    (x = '', y = '') +
        theme   (axis.text.x        = element_text(angle = 90, hjust = 1, vjust = 0, size = 12),
                 panel.background   = element_rect(fill='white'),
                 panel.grid.major.y = element_line(color = 'grey'),
                 panel.grid.minor.y = element_line(color = 'grey50'))
    )
# TOP 20 TABLES ###############################################################
    output$t20_table = DT::renderDataTable({
      datatable(data = complete.df %>%
                filter  (Record == as.character(input$type_20)) %>%
                select  (Country, X2015) %>%
                arrange (desc(X2015)) %>%
                top_n   (20),
        colnames = c('Country', input$type_20))
    })
# ABOUT #######################################################################
      output$about1 = renderText(
        'Team - Green Dreamer '
      )
      output$about2 = renderText(
        'This app aims to fashion itself primarily as an interactive and dynamic
        visualization tool. Parsing a robust and elaborate data source, the goal 
        is to provide users an intersectional view not available simply through
        the .csv files. Looking to bring the numbers to life, the purpose is not
        necessarily to provide inferential information but rather a visual insight
        into the story the data is trying to tell.'
      )
      output$about3 = renderText(
        'The primary source of data for this app was derived from the worldmrio.com 
        website. The Eora site describes itself as "global supply chain database" 
        that "consists of a multi-region input-output table (MRIO) model". The
        particular data set consists of 1,522 observations of 48 variables. Namely,
        it displays data for 190 countries from 1970 until 2015. The records are 
        categorized over consumption and production based accounting of emissions.
        The complete information and data is available here: 
        <http://worldmrio.com/footprints/carbon/>'
      )
      output$about4 = renderText(
        'This app was built using the Shiny! package on RStudio. The layout is
        using the ShinyDashboard format. The "World Map" and "Global Aggregates"
        pages were built using googleVis, while the rest of the app uses ggplot2.
        The additional packages used to process the data are tidyverse and DT'
      )
      output$about5 = renderText(
        'The image from the "Home" page was taken from the following site, under 
        free public domain: 
        <https://free-images.com/display/chimney_pollution_air_pollution.html>'
      )
###############################################################################
})
###############################################################################
